General issues
--------------------

- find and fix all FIXME hacks
- make unit tests check output
- fix extra -I on clang_index.parse() for clang 3.9.0 includes
- fix templates using different types of same class (e.g. Templ<Foo> and Templ<Foo*>)
- all 'const' return values are automatically casted to non-const in KL (./types/wrapped_ptr/conv/lib_to_edk.cpp)
- return values as refs/pointers should probably never create a new object
  - related: fix hacky var_as_pointer object ownership in types/wrapped_ptr/conv/lib_to_edk.cpp
- make NSTemplTypedef unit test work (template/namespace parsing problems)
- make Complex unit test work (template/namespace parsing problems)
- fix commented out failure in StdString.hpp, is_pointer in ./protocols/param/default/lib.cpp
- re-enable InPlace types (inheritance support for InPlace types and vtable pointer)
- exception handling, or exception-like (USD) handling
- add support for all operator types (+/*/[]/etc.)

Resolved issues
--------------------

X fix Inheritance with abstract return value
X missing namespace for 'new 's in fabric example
X must always defined default constructor (take away InlineType::InlineType() to see crash in test.kl)
X what does 'require Fabric;' do?
X no default constructor created if have other constructors, need empty constructor that throws KL exception or someting like that
X possible handling for function default values (make multiple KL functions)
X for abstract types create constructor that throws exception
X code duplication for params between Function, Constructor, InstanceMethod
X aliases created multiple times in .kl file
X consolidate template handling code
X fix template namespace issues (Template.hpp -> MyspaceType1)
X namespace issues with templated types (Foo<Bar>: Bar has wrong namespace)
X uncomment typedef in Namespaces.hpp
X fix typedef'd std::vector types, see commented out stuff in StdVector tests
