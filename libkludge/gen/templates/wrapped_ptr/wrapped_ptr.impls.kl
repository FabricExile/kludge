{######################################################################}
{# Copyright (c) 2010-2016, Fabric Software Inc. All rights reserved. #}
{######################################################################}
{% extends "gen/decl/decl.impls.kl" %}
{% block body %}
  {% for member in decl.members %}
    {% if member.is_public %}
{{member.result.type_info.kl.name.compound}} {{decl.this_type_info.kl.name.compound}}.GET_{{member.name}}() = "{{decl.this_type_info.kl.name.compound}}_GET_{{member.name}}";
      {% if member.is_settable %}
{{decl.this_type_info.kl.name.compound}}.SET_{{member.name}}!({{member.param.type_info.kl.name.base}} {{member.name}}{{member.param.type_info.kl.name.suffix}}) = "{{decl.this_type_info.kl.name.compound}}_SET_{{member.name}}";
      {% endif %}
      
    {% endif %}
  {% endfor %}

{% if decl.block_empty_kl_constructor %}
{{decl.this_type_info.kl.name.compound}}() =
  "{{decl.this_type_info.kl.name.compound}}_block_empty_constructor";
{% endif %}

Boolean {{decl.this_type_info.kl.name.compound}}.isNull() =
  "{{decl.this_type_info.kl.name.compound}}_is_null";

Boolean( {{decl.this_type_info.kl.name.compound}} that )
{
  this = that.isNull();
}

  {% for constructor in decl.constructors %}
//////////////////////////////////////////////////////////////////////////////
//
// KLUDGE EDK
// Description: {{ constructor.desc }}
// C++ Source Location: {{ constructor.location }}
//
//////////////////////////////////////////////////////////////////////////////
//
{{decl.this_type_info.kl.name.compound}}(
    {% for param in constructor.params %}
    {{param.render_kl() | indent(4)}}{{"," if not loop.last else ""}}
    {% endfor %}
    ) = "{{constructor.edk_symbol_name}}";
//////////////////////////////////////////////////////////////////////////////

  {% endfor %}

  {% for method in decl.methods %}
//////////////////////////////////////////////////////////////////////////////
//
// KLUDGE EDK
// Description: {{ method.desc }}
// C++ Source Location: {{ method.location }}
//
//////////////////////////////////////////////////////////////////////////////
//
    {% if method.result %}
{{method.result.type_info.kl.name.compound}}
    {% endif %}
{{decl.this_type_info.kl.name.compound}}.{{method.name}}(
    {% for param in method.params %}
    {{param.render_kl() | indent(4)}}{{"," if not loop.last else ""}}
    {% endfor %}
    ) = "{{method.edk_symbol_name}}";
//////////////////////////////////////////////////////////////////////////////

  {% endfor %}
{% endblock body %}
