{######################################################################}
{# Copyright (c) 2010-2016, Fabric Software Inc. All rights reserved. #}
{######################################################################}
{% extends "generate/decl/decl.impls.kl" %}
{% block body %}
{######################################################################}
{# Getters and Setters                                                #}
{######################################################################}
{% if record.include_getters_setters %}
{% for member in record.members %}
{% if member.is_public() %}
{% if member.has_getter() %}
{{member.type_info.kl.name.compound}} {{record.this_type_info.kl.name.compound}}.{{member.getter_kl_name}}() = "{{record.this_type_info.kl.name.compound}}_GET_{{member.cpp_name}}";
{% endif %}
{% if member.has_setter() %}
{{record.this_type_info.kl.name.compound}}.{{member.setter_kl_name}}!({{member.type_info.kl.name.base}} value{{member.type_info.kl.name.suffix}}) = "{{record.this_type_info.kl.name.compound}}_SET_{{member.cpp_name}}";
{% endif %}
{% endif %}

{% endfor %}
{% endif %}
{######################################################################}
{# Constructors and Destructor                                        #}
{######################################################################}
{% if record.include_empty_ctor %}
{{record.this_type_info.kl.name.compound}}() = "{{record.empty_ctor_edk_symbol_name}}";

{% endif %}
{% if record.include_copy_ctor %}
{{record.this_type_info.kl.name.compound}}(
    {{record.copy_params[0].render_kl() | indent(4)}}
    ) = "{{record.copy_ctor_edk_symbol_name}}";

{% endif %}
{% for ctor in record.ctors %}
{{ctor.this.type_info.kl.name.compound}}(
    {% for param in ctor.params %}
    {{param.render_kl() | indent(4)}}{{"," if not loop.last else ""}}
    {% endfor %}
    ) = "{{ctor.edk_symbol_name}}";

{% endfor %}
{% if record.include_dtor %}
~{{record.this_type_info.kl.name.compound}}() = "{{record.dtor_edk_symbol_name}}";

{% endif %}
{######################################################################}
{# Methods                                                            #}
{######################################################################}
{% for method in record.methods %}
{{method.result.type_info.kl.name.compound}}
{% if method.is_static %}
{{method.this.type_info.kl.name.compound}}_{{method.kl_name}}(
{% else %}
{{method.this.type_info.kl.name.compound}}.{{method.kl_name}}{{method.this_access_suffix}}(
{% endif %}
    {% for param in method.params %}
    {{param.render_kl() | indent(4)}}{{"," if not loop.last else ""}}
    {% endfor %}
    ) = "{{method.edk_symbol_name}}";

{% endfor %}
{######################################################################}
{# Unary Operators                                                    #}
{######################################################################}
{% for uni_op in record.uni_ops %}
{{uni_op.result.type_info.kl.name.compound}}
{{uni_op.this.type_info.kl.name.compound}}.{{uni_op.kl_method_name}}!(
    ) = "{{uni_op.edk_symbol_name}}";

{% endfor %}
{######################################################################}
{# Binary Operators                                                   #}
{######################################################################}
{% for bin_op in record.bin_ops %}
{{bin_op.result.type_info.kl.name.compound}}
{{bin_op.op}}(
    {{bin_op.params[0].render_kl() | indent(4)}},
    {{bin_op.params[1].render_kl() | indent(4)}}
    ) = "{{bin_op.edk_symbol_name}}";

{% endfor %}
{######################################################################}
{# Assignment Operators                                               #}
{######################################################################}
{% for ass_op in record.ass_ops %}
{{ass_op.this.type_info.kl.name.compound}}.{{ass_op.op}}(
    {{ass_op.params[0].render_kl() | indent(4)}}
    ) = "{{ass_op.edk_symbol_name}}";

{% endfor %}
{% if record.include_simple_ass_op %}
{{record.this_type_info.kl.name.compound}}.=(
    {{record.copy_params[0].render_kl() | indent(4)}}
    ) = "{{record.simple_ass_op_edk_symbol_name}}";

{% endif %}
{######################################################################}
{# Casts                                                              #}
{######################################################################}
{% for cast in record.casts %}
{{cast.this.type_info.kl.name.compound}}(
    {{cast.params[0].render_kl() | indent(4)}}
    ) = "{{cast.edk_symbol_name}}";

{% endfor %}
{######################################################################}
{# Deref                                                              #}
{######################################################################}
{% if record.deref_kl_method_name %}
{{record.deref_result.type_info.kl.name.compound}}
{{record.deref_this.type_info.kl.name.compound}}.{{record.deref_kl_method_name}}(
    ) = "{{record.deref_edk_symbol_name}}";

{% endif %}
{######################################################################}
{# Index Operators                                                    #}
{######################################################################}
{% if record.get_ind_op_result %}
{{record.get_ind_op_result.type_info.kl.name.compound}}
{{record.get_ind_op_this.type_info.kl.name.compound}}.getAt(
    {% for param in record.get_ind_op_params %}
    {{param.render_kl() | indent(4)}}{{"," if not loop.last else ""}}
    {% endfor %}
    ) = "{{record.get_ind_op_edk_symbol_name}}";

{% endif %}
{% if record.set_ind_op_params %}
{{record.set_ind_op_this.type_info.kl.name.compound}}.setAt(
    {% for param in record.set_ind_op_params %}
    {{param.render_kl() | indent(4)}}{{"," if not loop.last else ""}}
    {% endfor %}
    ) = "{{record.set_ind_op_edk_symbol_name}}";

{% endif %}
{######################################################################}
{% endblock body %}
