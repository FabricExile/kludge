#ifndef __KL2EDK_AUTOGEN_{{ t.type_name }}_functions__
#define __KL2EDK_AUTOGEN_{{ t.type_name }}_functions__

#ifdef KL2EDK_INCLUDE_MESSAGES
  #pragma message ( "Including '{{ t.type_name }}_functions.h'" )
#endif

////////////////////////////////////////////////////////////////
// THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT MODIFY!!
////////////////////////////////////////////////////////////////
// Generated by kl2edk version {{ version_full }}
////////////////////////////////////////////////////////////////

#include <FabricEDK.h>
#if FABRIC_EDK_VERSION_MAJ != {{ version_maj }} || FABRIC_EDK_VERSION_MIN != {{ version_min }}
# error "This file needs to be rebuilt for the current EDK version!"
#endif

#include "global.h"
{% if manager.is_struct(t.type_name) %}
#include "{{ t.type_name }}.h"
{% elif manager.is_object(t.type_name) or manager.is_interface(t.type_name) %}
#include "{{ t.type_name }}_impl.h"
{% endif %}

{% for method in t.methods %}
{% if method.symbol %}
// Defined at {{ method.location }}
FABRIC_EXT_EXPORT
{% if manager.uses_returnval(method.ret_type_name) %}
  {{ method.ret_type_name_cpp_full }}
{% else %}
  void
{% endif %}
  {{ method.symbol }}(
{% if method.ret_type_name and not manager.uses_returnval(method.ret_type_name) %}
    Fabric::EDK::KL::Traits< {{ method.ret_type_name_cpp_full }} >::Result _result,
{% endif %}
    Fabric::EDK::KL::Traits< {{ t.type_name_cpp_full }} >::{{ method.usage_cpp }} {{ "this_" -}}
{% for param in method.params %}
,
    Fabric::EDK::KL::Traits< {{ param.type_name_cpp_full }} >::{{ param.usage_cpp }} {{ param.name -}}
{% endfor %}

);

{% endif %}
{% endfor %}

#endif // __KL2EDK_AUTOGEN_{{ t.type_name }}_functions__
