require WrappedPtr;

operator entry() {
  Class value;
  report("ReturnClass() = " + ReturnClass());
  report("ReturnClassVec() = " + ReturnClassVec());

  value = ReturnClass();
  report("Before value.SET_floatValue(-12.34): value.GET_floatValue() = " + value.GET_floatValue());
  value.SET_floatValue(-12.34);
  report("After value.SET_floatValue(-12.34): value.GET_floatValue() = " + value.GET_floatValue());
  report("Before value.SET_stringValue('hello'): value.GET_stringValue() = " + value.GET_stringValue());
  value.SET_stringValue('hello');
  report("After value.SET_stringValue('hello'): value.GET_stringValue() = " + value.GET_stringValue());

  report("value.publicMethod() = " + value.publicMethod());
  report("value.getDesc() = " + value.getDesc());
  report("value.getMulFloatValue(5.12) = " + value.getMulFloatValue(5.12));

  Float32 floatValue;
  String stringValue;
  SInt32 intValue;
  value.exportValues(floatValue, stringValue, intValue);
  report("value.exportValues(...): floatValue = " + floatValue);
  report("value.exportValues(...): stringValue = " + stringValue);
  report("value.exportValues(...): intValue = " + intValue);

  StructWithIndirectTypeThatCanInPlace st =
    ReturnStructWithIndirectTypeThatCanInPlace();
  report("st.GET_floatValue() = " + st.GET_floatValue());
}
